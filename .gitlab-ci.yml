stages:
  - install-deps
  - app-test
  - image-build
  - image-tag-main
  - image-tag-develop

install deps:
  stage: install-deps
  image: node:alpine
  script:
    - npm ci
  cache:
    paths:
      - node_modules

app tests:
  stage: app-test
  image: node:alpine
  script:
    - npm run lint
    - npm test
  artifacts:
    paths:
      - cypress/videos
      - cypress/screenshots
    expire_in: 1 day

image build:
  stage: image-build
  image: docker:20
  services:
    - docker:dind
  script:
    - docker info
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - >
      docker build
      --pull
      --build-arg VCS_REF=$CI_COMMIT_SHA
      --build-arg VCS_URL=$CI_PROJECT_URL
      --cache-from $CI_REGISTRY_IMAGE:latest
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

tag main:
  variables: 
    GIT_STRATEGY: none
  stage: image-tag-main
  image: docker:20
  only:
    - main
  script:
    - docker info
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest

tag develop:
  variables: 
    GIT_STRATEGY: none
  stage: image-tag-develop
  image: docker:20
  only:
    - develop
  script:
    - docker info
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:dev
    - docker push $CI_REGISTRY_IMAGE:dev


      